// <auto-generated />
using System;
using LibraryPersistenceLayer.Configurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryPersistenceLayer.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20230625134516_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryPersistenceLayer.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1564, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "William",
                            Surname = "Shakespeare"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1775, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jane ",
                            Surname = "Austen"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1899, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ernest ",
                            Surname = "Hemingway"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1882, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Virginia  ",
                            Surname = "Woolf"
                        });
                });

            modelBuilder.Entity("LibraryPersistenceLayer.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ISBN")
                        .IsUnique();

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            ISBN = "9780143132188",
                            Title = "Macbeth",
                            Year = "1606"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            ISBN = "9780743477116",
                            Title = "Romeo e Giulietta",
                            Year = "1597"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            ISBN = "9780141439518",
                            Title = "Orgoglio e pregiudizio",
                            Year = "1813"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            ISBN = "9780141439662",
                            Title = "Ragione e sentimento",
                            Year = "1811"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            ISBN = "9780684801223",
                            Title = "Il vecchio e il mare",
                            Year = "1952"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            ISBN = "9780099910107",
                            Title = "Addio alle armi",
                            Year = "1929"
                        });
                });

            modelBuilder.Entity("LibraryPersistenceLayer.Models.Book", b =>
                {
                    b.HasOne("LibraryPersistenceLayer.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("LibraryPersistenceLayer.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
